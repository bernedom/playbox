# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./playbox --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 ./playbox --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install pytest
          pytest

  dockerbuild:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Package python module
        run: python setup.py sdist

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: setup Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: build and push hack to DockerHub
        # Master push without a release
        if: github.event.action != 'published' && github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm/v7
          push: true
          tags: |
            bernedom/playbox:hack

      - name: build and push develop to DockerHub
        # Master push without a release
        if: github.event.action != 'published' && github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm/v7
          push: true
          tags: |
            bernedom/playbox:develop

      - name: build and push latest to DockerHub
        # Master push for release
        if: github.event.action == 'published'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm/v7
          push: false
          tags: |
            bernedom/playbox:latest
            bernedom/playbox:${GITHUB_REF##*/}
